services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    secrets:
      - db-password
      - jwt-key
      - confirmation-password
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD_FILE=/run/secret/db-password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=app
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - SECRET_KEY_FILE=/run/secrets/jwt-key
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - CONFIRMATION_USERNAME=obico.updates@gmail.com
      - CONFIRMATION_PASSWORD_FILE=/run/secret/confirmation-password
    depends_on:
      - redis
      - email_worker
      - db
    networks:
      - backend
    
  calendar_worker:
    build:
      context: .
      dockerfile: calendar_worker/Dockerfile
    secrets:
      - db-password
      - update-password
    environment:
      - API_PORT=8000
      - API_URL=https://notifer.emilpopovic.me
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=app
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - UPDATE_USERNAME=obico.updates@gmail.com
      - UPDATE_PASSWORD_FILE=/run/secrets/update-password
    networks:
      - backend
    depends_on:
      - redis
      - email_worker
      - db
  
  email_worker:
    build:
      context: .
      dockerfile: email_worker/Dockerfile
    scale: 5
    command: rq worker email --url redis://redis:6379/0
    networks:
      - backend
    depends_on:
      - redis
  
  redis:
    image: redis:alpine
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      
  db:
    image: postgres:13-alpine
    secrets:
      - db-password
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 5
    
networks:
  backend:
    driver: bridge
    
volumes:
  postgres_data:
    
secrets:
  db-password:
    file: ./secrets/db-password.txt
  jwt-key:
    file: ./secrets/jwt-key.txt
  confirmation-password:
    file: ./secrets/confirmation-password.txt
  update-password:
    file: ./secrets/update-password.txt
