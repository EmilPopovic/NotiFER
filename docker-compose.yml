# this file is used for local development only

services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./secrets/db-password.txt:/run/secrets/db-password:ro
      - ./secrets/jwt-key.txt:/run/secrets/jwt-key:ro
      - ./secrets/confirmation-password.txt:/run/secrets/confirmation-password:ro
    environment:
      - API_URL=http://localhost:8000
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=app
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - SECRET_KEY_FILE=/run/secrets/jwt-key
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - CONFIRMATION_USERNAME=obico.updates@gmail.com
      - CONFIRMATION_PASSWORD_FILE=/run/secrets/confirmation-password
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      email_worker:
        condition: service_started
    networks:
      - backend
    
  calendar_worker:
    build:
      context: .
      dockerfile: calendar_worker/Dockerfile
    volumes:
      - ./secrets/db-password.txt:/run/secrets/db-password:ro
      - ./secrets/update-password.txt:/run/secrets/update-password:ro
      - ./secrets/jwt-key.txt:/run/secrets/jwt-key:ro
    environment:
      - API_PORT=8000
      - API_URL=http://localhost:8000
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=app
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - SECRET_KEY_FILE=/run/secrets/jwt-key
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - UPDATE_USERNAME=obico.updates@gmail.com
      - UPDATE_PASSWORD_FILE=/run/secrets/update-password
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      email_worker:
        condition: service_started
      api:
        condition: service_started
  
  email_worker:
    build:
      context: .
      dockerfile: email_worker/Dockerfile
    scale: 5
    command: rq worker email --url redis://redis:6379/0
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
  
  redis:
    image: redis:alpine
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - POSTGRES_DB=app
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./secrets/db-password.txt:/run/secrets/db-password:ro
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app"]
      interval: 5s
      timeout: 3s
      retries: 5
    
networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
