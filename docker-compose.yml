services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    depends_on:
      - redis
      - email_worker
      - postgres
    networks:
      - backend
    
  calendar_worker:
    build:
      context: .
      dockerfile: calendar_worker/Dockerfile
    env_file:
      - .env
    depends_on:
      - redis
      - email_worker
      - postgres
    networks:
      - backend
  
  email_worker:
    build:
      context: .
      dockerfile: email_worker/Dockerfile
    scale: 5
    command: rq worker email --url redis://redis:6379/0
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      - redis
    volumes:
      - .:/app
    working_dir: /app
  
  redis:
    image: redis:alpine
    command: redis-server --bind 0.0.0.0
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    
networks:
  backend:
    driver: bridge
    
volumes:
  postgres_data: