name: Build and Deploy

on:
  push:
    branches:
      - master
  
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./api/Dockerfile
          push: true
          tags: | 
            ${{ secrets.DOCKERHUB_USERNAME }}/notifer_api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/notifer_api:${{ github.sha }}
          
      - name: Build and push Calendar Worker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./calendar_worker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/notifer_calendar_worker:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/notifer_calendar_worker:${{ github.sha }}
          
      - name: Build and push Email Worker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./email_worker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/notifer_email_worker:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/notifer_email_worker:${{ github.sha }}
          
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile
          
      - name: Create Docker Secrets
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: notifer.emilpopovic.me
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            #!/bin/bash
            set -e
            
            create_secret() {
              local secret_name=$1
              local secret_value=$2
              if ! docker secret ls --format '{{.Name}}' | grep -qw "$secret_name"; then
                echo "$secret_value" | docker secret create "$secret_name" - 
                echo "Secret $secret_name created."
              else
                echo "Secret $secret_name already exists."
              fi
            }
          
            create_secret "db-password" "${{ secrets.DB_PASSWORD }}"
            create_secret "jwt-key" "${{ secrets.JWT_KEY }}"
            create_secret "confirmation-password" "${{ secrets.CONFIRMATION_PASSWORD }}"
            create_secret "update-password" "${{ secrets.UPDATE_PASSWORD }}"
            create_secret "resend-api-key" "${{ secrets.RESEND_API_KEY }}"
            create_secret "cloudflare-api-token" "$ {{ secrets.CLOUDFLARE_API_TOKEN }}"
            create_secret "dashboard-auth" "${{ secrets.DASHBOARD_AUTH }}"
        
      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: notifer
          file: docker-stack.yaml
          host: notifer.emilpopovic.me
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
